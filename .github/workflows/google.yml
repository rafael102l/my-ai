import { useState, useEffect } from "react";
import emailjs from "emailjs-com";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { v4 as uuidv4 } from "uuid";

export default function MysticForm() {
  const [step, setStep] = useState(1);
  const [name, setName] = useState("");
  const [age, setAge] = useState("");
  const [email, setEmail] = useState("");
  const [question, setQuestion] = useState("");
  const [response, setResponse] = useState("");
  const [loading, setLoading] = useState(false);
  const [sessionId, setSessionId] = useState("");

  useEffect(() => {
    const storedId = localStorage.getItem("mysticSessionId");
    if (!storedId) {
      const newId = uuidv4();
      localStorage.setItem("mysticSessionId", newId);
      setSessionId(newId);
    } else {
      setSessionId(storedId);
    }

    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.get("paid") === "true") {
      setStep(3);
      generateReading();
    }
  }, []);

  const generateReading = () => {
    setLoading(true);
    const prompt = `האדם ששמו ${name}, בגיל ${age}, שואל: ${question}. צור עבורו תקשור רוחני אישי.`;

    setTimeout(() => {
      const message = "המסר עבורך: השינוי שאתה מחפש נמצא כבר בתוכך. הקשב לאינטואיציה שלך.";
      setResponse(message);
      sendEmail(message);
      saveToBackend(message);
      setLoading(false);
    }, 2000);
  };

  const sendEmail = (message) => {
    const templateParams = {
      to_name: name,
      to_email: email,
      message,
      session_id: sessionId,
    };

    emailjs
      .send("your_service_id", "your_template_id", templateParams, "your_user_id")
      .then((result) => {
        console.log("Email sent:", result.text);
      })
      .catch((error) => {
        console.error("Email error:", error);
      });
  };

  const saveToBackend = async (message) => {
    try {
      await fetch("http://localhost:5000/api/save-reading", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          sessionId,
          name,
          age,
          email,
          question,
          message,
        }),
      });
    } catch (err) {
      console.error("Backend save failed:", err);
    }
  };

  const redirectToCardcom = () => {
    const paymentUrl = `https://secure.cardcom.solutions/EA/EA5/YI1bVQtqFke8131aN6B4sw/Order?sessionId=${sessionId}`;
    window.location.href = paymentUrl;
  };

  return (
    <div className="max-w-xl mx-auto mt-10 p-4">
      {step === 1 && (
        <Card className="p-4">
          <CardContent className="space-y-4">
            <h2 className="text-xl font-bold text-center">המקום שבו אתה שואל – והיקום עונה</h2>
            <Input placeholder="שם פרטי" value={name} onChange={(e) => setName(e.target.value)} />
            <Input placeholder="גיל" type="number" value={age} onChange={(e) => setAge(e.target.value)} />
            <Input placeholder="אימייל" type="email" value={email} onChange={(e) => setEmail(e.target.value)} />
            <Textarea placeholder="מה אתה רוצה לדעת?" value={question} onChange={(e) => setQuestion(e.target.value)} />
            <Button onClick={() => setStep(2)} disabled={!name || !age || !question || !email}>
              המשך לתשלום
            </Button>
          </CardContent>
        </Card>
      )}

      {step === 2 && (
        <Card className="p-4">
          <CardContent className="space-y-4 text-center">
            <h2 className="text-xl font-bold">תשלום</h2>
            <p>על מנת לקבל את המסר, יש להשלים את התשלום המאובטח</p>
            <Button onClick={redirectToCardcom}>
              מעבר לתשלום מאובטח בקארדקום
            </Button>
          </CardContent>
        </Card>
      )}

      {step === 3 && (
        <Card className="p-4">
          <CardContent className="space-y-4 text-center">
            <h2 className="text-xl font-bold">המסר שלך</h2>
            {loading ? (
              <p className="text-lg italic">מכין את המסר שלך...</p>
            ) : (
              <p className="text-lg italic">{response}</p>
            )}
          </CardContent>
        </Card>
      )}
    </div>
  );
}
